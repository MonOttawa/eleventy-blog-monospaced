<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Monospaced_</title>
    <subtitle>Monospaced is a eleventy blog theme template which is highly customizable and provides a reliable and accessible experience to the readers</subtitle>
    
    <link href="https://github.com/asvny/eleventy-blog-monospaced" rel="self"/>
    <link href="https://github.com/asvny/eleventy-blog-monospaced"/>
    <updated>2015-06-18T10:00:00+10:00</updated>
    <id>https://github.com/asvny/eleventy-blog-monospaced</id>
    <author>
        <name></name>
        <email></email>
    </author>
        
        <entry>
            <title>A post with figures and video</title>
            <link href="/posts/post-with-figures-and-images/"/>
            <updated>2019-06-18T10:00:00+10:00</updated>
            <id>/posts/post-with-figures-and-images/</id>
            <content type="html">&lt;p&gt;A post to demonstrate how a blog post looks on Monospaced. Content is all set in the ‚ÄúBody‚Äù field as markdown and Eleventy transforms it into a proper HTML post. You can also edit the markdown file directly if you prefer not to use the CMS.&lt;/p&gt;
&lt;p&gt;If you want to make an image bleed-out, add a title attribute to it and the front-end will automatically wrap it in a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; tag for you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hylia-forestry.netlify.com/images/demo-image-1.jpg&quot; alt=&quot;The top of a grey concrete building with a blue sky in the background&quot; title=&quot;Brutalism at its finest. Photo by Artificial Photography on Unsplash.&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can also add videos to posts from YouTube or Vimeo (or wherever, really) and the front-end will also make those bleed-out for you too.&lt;/p&gt;
&lt;p&gt;&lt;lite-iframe type=&quot;youtube&quot; style=&quot;width: 100%; height: 320px&quot;  src=&quot;https://www.youtube.com/embed/_38JDGnr0vA&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/lite-iframe&gt;&lt;/p&gt;
&lt;p&gt;Finally, how about a &lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt;?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Quotes will take a slightly different style to normal body text and look fancy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://hylia-forestry.netlify.com/images/demo-image-2.jpg&quot; alt=&quot;Person holds up a photograph of a riverside and buildings with the same river as a backdrop&quot; title=&quot;Remember, if you want a figure and caption, add a &#39;title&#39; attribute to image in the body field ‚Äî Photo by Kharytonova Antonina on Unsplash.&quot;&gt;&lt;/p&gt;
&lt;p&gt;Hopefully, this has demonstrated how simple it is to make a nice looking blog with Monospaced.&lt;/p&gt;
</content>
        </entry>
        
        <entry>
            <title>A Story about monospace font</title>
            <link href="/posts/a-story-about-monospace-font/"/>
            <updated>2019-06-18T10:00:00+10:00</updated>
            <id>/posts/a-story-about-monospace-font/</id>
            <content type="html">&lt;p&gt;The best way to demo a code post is to display a real life post, so check out this one from &lt;a href=&quot;https://andy-bell.design/wrote/creating-a-full-bleed-css-utility/&quot;&gt;andy-bell.design&lt;/a&gt; about a full bleed CSS utility.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Sometimes you want to break your components out of the constraints that they find themselves in. A common situation where this occurs is when you don‚Äôt have much control of the container that it exists in, such as a CMS main content area.&lt;/p&gt;
&lt;p&gt;This is even more the case with editing tools such as the &lt;a href=&quot;https://wordpress.org/gutenberg/&quot;&gt;WordPress Gutenberg editor&lt;/a&gt;, where in theory, you could pull in a component from a design system and utilise it in the main content of your web page. In these situations, it can be pretty darn handy to have a little utility that makes the element 100% of the viewport‚Äôs width &lt;em&gt;and&lt;/em&gt; still maintain its flow within its parent container.&lt;/p&gt;
&lt;p&gt;This is when I normally pull the &lt;code&gt;.full-bleed&lt;/code&gt; utility class out of my back pocket.&lt;/p&gt;
&lt;h2 id=&quot;the-.full-bleed-utility&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-.full-bleed-utility&quot;&gt;&lt;/a&gt; The &lt;code&gt;.full-bleed&lt;/code&gt; utility&lt;/h2&gt;
&lt;p&gt;It‚Äôs small, but hella mighty:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.full-bleed&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vw&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here it is in a context where it makes a fancy &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; and a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; element bleed out of their parent container.&lt;/p&gt;
&lt;lite-iframe  style=&quot;width: 100%; height: 300px&quot; scrolling=&quot;no&quot; title=&quot;Piccalilli CSS Utility ‚Äî Issue  #2 ‚Äî Full bleed utility&quot; src=&quot;//codepen.io/andybelldesign/embed/Nmxrwv/?height=300&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
&lt;/lite-iframe&gt;
&lt;p&gt;The &lt;code&gt;.full-bleed&lt;/code&gt; utility gives those elements prominence and &lt;em&gt;importantly&lt;/em&gt; keeps their semantic place in the page. Just how I like it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;üî• &lt;strong&gt;Pro tip&lt;/strong&gt;: When working with a utility like &lt;code&gt;.full-bleed&lt;/code&gt;, it‚Äôs a good idea to add an inner container that has a max-width and auto horizontal margin. For this, I normal create a shared &lt;code&gt;.wrapper&lt;/code&gt; component like this:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.wrapper&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having a container like &lt;code&gt;.wrapper&lt;/code&gt; helps to create consistent, centred content.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;how-the-.full-bleed-utility-works&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-the-.full-bleed-utility-works&quot;&gt;&lt;/a&gt; How the &lt;code&gt;.full-bleed&lt;/code&gt; utility works&lt;/h3&gt;
&lt;p&gt;We set the container to be &lt;code&gt;width: 100vw&lt;/code&gt;, which equates to the full viewport width. We couldn‚Äôt set it to &lt;code&gt;width: 100%&lt;/code&gt; because it would only fill the space of its parent element. The parent element‚Äôs width &lt;em&gt;is&lt;/em&gt; useful though, because by setting &lt;code&gt;margin-left: 50%&lt;/code&gt;, we are telling the component to align its &lt;strong&gt;left edge&lt;/strong&gt; to the center of its parent element, because &lt;code&gt;50%&lt;/code&gt; is half of the &lt;strong&gt;parent element‚Äôs&lt;/strong&gt; width.&lt;/p&gt;
&lt;p&gt;Finally, we use CSS transforms to &lt;code&gt;translateX(-50%)&lt;/code&gt;. Because the transform works off the element‚Äôs dimensions and not the parent‚Äôs dimensions, it‚Äôll pull the element back &lt;code&gt;50vw&lt;/code&gt;, because it‚Äôs &lt;code&gt;100vw&lt;/code&gt; wide, thus making it sit perfectly flush with the viewport‚Äôs edges.&lt;/p&gt;
&lt;h2 id=&quot;wrapping-up&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#wrapping-up&quot;&gt;&lt;/a&gt; Wrapping up&lt;/h2&gt;
&lt;p&gt;Hopefully this short and sweet trick will help you out on your projects. If it does, &lt;a href=&quot;https://twitter.com/andybelldesign&quot;&gt;drop me a tweet&lt;/a&gt;, because I‚Äôd love to see it!&lt;/p&gt;
</content>
        </entry>
        
        <entry>
            <title>A post with embeded samples</title>
            <link href="/posts/a-embeded-post/"/>
            <updated>2019-06-18T10:00:00+10:00</updated>
            <id>/posts/a-embeded-post/</id>
            <content type="html">&lt;p&gt;The best way to demo a code post is to display a real life post, so check out this one from &lt;a href=&quot;https://andy-bell.design/wrote/creating-a-full-bleed-css-utility/&quot;&gt;andy-bell.design&lt;/a&gt; about a full bleed CSS utility.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Sometimes you want to break your components out of the constraints that they find themselves in. A common situation where this occurs is when you don‚Äôt have much control of the container that it exists in, such as a CMS main content area.&lt;/p&gt;
&lt;p&gt;This is even more the case with editing tools such as the &lt;a href=&quot;https://wordpress.org/gutenberg/&quot;&gt;WordPress Gutenberg editor&lt;/a&gt;, where in theory, you could pull in a component from a design system and utilise it in the main content of your web page. In these situations, it can be pretty darn handy to have a little utility that makes the element 100% of the viewport‚Äôs width &lt;em&gt;and&lt;/em&gt; still maintain its flow within its parent container.&lt;/p&gt;
&lt;p&gt;This is when I normally pull the &lt;code&gt;.full-bleed&lt;/code&gt; utility class out of my back pocket.&lt;/p&gt;
&lt;h2 id=&quot;the-.full-bleed-utility&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-.full-bleed-utility&quot;&gt;&lt;/a&gt; The &lt;code&gt;.full-bleed&lt;/code&gt; utility&lt;/h2&gt;
&lt;p&gt;It‚Äôs small, but hella mighty:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.full-bleed&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vw&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here it is in a context where it makes a fancy &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; and a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; element bleed out of their parent container.&lt;/p&gt;
&lt;lite-iframe  style=&quot;width: 100%; height: 300px&quot; scrolling=&quot;no&quot; title=&quot;Piccalilli CSS Utility ‚Äî Issue  #2 ‚Äî Full bleed utility&quot; src=&quot;//codepen.io/andybelldesign/embed/Nmxrwv/?height=300&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
&lt;/lite-iframe&gt;
&lt;p&gt;The &lt;code&gt;.full-bleed&lt;/code&gt; utility gives those elements prominence and &lt;em&gt;importantly&lt;/em&gt; keeps their semantic place in the page. Just how I like it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;üî• &lt;strong&gt;Pro tip&lt;/strong&gt;: When working with a utility like &lt;code&gt;.full-bleed&lt;/code&gt;, it‚Äôs a good idea to add an inner container that has a max-width and auto horizontal margin. For this, I normal create a shared &lt;code&gt;.wrapper&lt;/code&gt; component like this:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.wrapper&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having a container like &lt;code&gt;.wrapper&lt;/code&gt; helps to create consistent, centred content.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;how-the-.full-bleed-utility-works&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-the-.full-bleed-utility-works&quot;&gt;&lt;/a&gt; How the &lt;code&gt;.full-bleed&lt;/code&gt; utility works&lt;/h3&gt;
&lt;p&gt;We set the container to be &lt;code&gt;width: 100vw&lt;/code&gt;, which equates to the full viewport width. We couldn‚Äôt set it to &lt;code&gt;width: 100%&lt;/code&gt; because it would only fill the space of its parent element. The parent element‚Äôs width &lt;em&gt;is&lt;/em&gt; useful though, because by setting &lt;code&gt;margin-left: 50%&lt;/code&gt;, we are telling the component to align its &lt;strong&gt;left edge&lt;/strong&gt; to the center of its parent element, because &lt;code&gt;50%&lt;/code&gt; is half of the &lt;strong&gt;parent element‚Äôs&lt;/strong&gt; width.&lt;/p&gt;
&lt;p&gt;Finally, we use CSS transforms to &lt;code&gt;translateX(-50%)&lt;/code&gt;. Because the transform works off the element‚Äôs dimensions and not the parent‚Äôs dimensions, it‚Äôll pull the element back &lt;code&gt;50vw&lt;/code&gt;, because it‚Äôs &lt;code&gt;100vw&lt;/code&gt; wide, thus making it sit perfectly flush with the viewport‚Äôs edges.&lt;/p&gt;
&lt;h2 id=&quot;wrapping-up&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#wrapping-up&quot;&gt;&lt;/a&gt; Wrapping up&lt;/h2&gt;
&lt;p&gt;Hopefully this short and sweet trick will help you out on your projects. If it does, &lt;a href=&quot;https://twitter.com/andybelldesign&quot;&gt;drop me a tweet&lt;/a&gt;, because I‚Äôd love to see it!&lt;/p&gt;
</content>
        </entry>
        
        <entry>
            <title>A post with code samples</title>
            <link href="/posts/post-with-code-samples/"/>
            <updated>2018-06-18T10:00:00+10:00</updated>
            <id>/posts/post-with-code-samples/</id>
            <content type="html">&lt;p&gt;Sometimes you want to break your components out of the constraints that they find themselves in. A common situation where this occurs is when you don‚Äôt have much control of the container that it exists in, such as a CMS main content area.&lt;/p&gt;
&lt;p&gt;This is even more the case with editing tools such as the &lt;a href=&quot;https://wordpress.org/gutenberg/&quot;&gt;WordPress Gutenberg editor&lt;/a&gt;, where in theory, you could pull in a component from a design system and utilise it in the main content of your web page. In these situations, it can be pretty darn handy to have a little utility that makes the element 100% of the viewport‚Äôs width &lt;em&gt;and&lt;/em&gt; still maintain its flow within its parent container.&lt;/p&gt;
&lt;p&gt;This is when I normally pull the &lt;code&gt;.full-bleed&lt;/code&gt; utility class out of my back pocket.&lt;/p&gt;
&lt;h2 id=&quot;the-.full-bleed-utility&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-.full-bleed-utility&quot;&gt;&lt;/a&gt; The &lt;code&gt;.full-bleed&lt;/code&gt; utility&lt;/h2&gt;
&lt;p&gt;It‚Äôs small, but hella mighty:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.full-bleed&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vw&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here it is in a context where it makes a fancy &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; and a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; element bleed out of their parent container.&lt;/p&gt;
&lt;lite-iframe  style=&quot;width: 100%;height: 300px&quot; scrolling=&quot;no&quot; title=&quot;Piccalilli CSS Utility ‚Äî Issue  #2 ‚Äî Full bleed utility&quot; src=&quot;//codepen.io/andybelldesign/embed/Nmxrwv/?height=300&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
&lt;/lite-iframe&gt;
&lt;p&gt;The &lt;code&gt;.full-bleed&lt;/code&gt; utility gives those elements prominence and &lt;em&gt;importantly&lt;/em&gt; keeps their semantic place in the page. Just how I like it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;üî• &lt;strong&gt;Pro tip&lt;/strong&gt;: When working with a utility like &lt;code&gt;.full-bleed&lt;/code&gt;, it‚Äôs a good idea to add an inner container that has a max-width and auto horizontal margin. For this, I normal create a shared &lt;code&gt;.wrapper&lt;/code&gt; component like this:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.wrapper&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having a container like &lt;code&gt;.wrapper&lt;/code&gt; helps to create consistent, centred content.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;how-the-.full-bleed-utility-works&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-the-.full-bleed-utility-works&quot;&gt;&lt;/a&gt; How the &lt;code&gt;.full-bleed&lt;/code&gt; utility works&lt;/h3&gt;
&lt;p&gt;We set the container to be &lt;code&gt;width: 100vw&lt;/code&gt;, which equates to the full viewport width. We couldn‚Äôt set it to &lt;code&gt;width: 100%&lt;/code&gt; because it would only fill the space of its parent element. The parent element‚Äôs width &lt;em&gt;is&lt;/em&gt; useful though, because by setting &lt;code&gt;margin-left: 50%&lt;/code&gt;, we are telling the component to align its &lt;strong&gt;left edge&lt;/strong&gt; to the center of its parent element, because &lt;code&gt;50%&lt;/code&gt; is half of the &lt;strong&gt;parent element‚Äôs&lt;/strong&gt; width.&lt;/p&gt;
&lt;p&gt;Finally, we use CSS transforms to &lt;code&gt;translateX(-50%)&lt;/code&gt;. Because the transform works off the element‚Äôs dimensions and not the parent‚Äôs dimensions, it‚Äôll pull the element back &lt;code&gt;50vw&lt;/code&gt;, because it‚Äôs &lt;code&gt;100vw&lt;/code&gt; wide, thus making it sit perfectly flush with the viewport‚Äôs edges.&lt;/p&gt;
&lt;h2 id=&quot;wrapping-up&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#wrapping-up&quot;&gt;&lt;/a&gt; Wrapping up&lt;/h2&gt;
&lt;p&gt;Hopefully this short and sweet trick will help you out on your projects. If it does, &lt;a href=&quot;https://twitter.com/andybelldesign&quot;&gt;drop me a tweet&lt;/a&gt;, because I‚Äôd love to see it!&lt;/p&gt;
</content>
        </entry>
        
        <entry>
            <title>A simple post</title>
            <link href="/posts/a-simple-post/"/>
            <updated>2017-06-18T10:00:00+10:00</updated>
            <id>/posts/a-simple-post/</id>
            <content type="html">&lt;p&gt;A simple post to demonstrate how a normal blog post looks on Monospaced. Content is all set in the ‚ÄúBody‚Äù field as markdown and Eleventy transforms it into a proper HTML post. You can also edit the markdown file directly if you prefer not to use the CMS.&lt;/p&gt;
&lt;p&gt;How about a &lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt;?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Maecenas faucibus mollis interdum. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A list of stuff:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sed posuere consectetur est at lobortis&lt;/li&gt;
&lt;li&gt;Aenean lacinia bibendum nulla sed consectetur&lt;/li&gt;
&lt;li&gt;Sed posuere consectetur est at lobortis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How about an ordered list of stuff:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sed posuere consectetur est at lobortis&lt;/li&gt;
&lt;li&gt;Aenean lacinia bibendum nulla sed consectetur&lt;/li&gt;
&lt;li&gt;Sed posuere consectetur est at lobortis&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hopefully, this has demonstrated how simple it is to make a nice looking blog with Monospaced.&lt;/p&gt;
</content>
        </entry>
        
        <entry>
            <title>A Story</title>
            <link href="/posts/a-story/"/>
            <updated>2015-06-18T10:00:00+10:00</updated>
            <id>/posts/a-story/</id>
            <content type="html">&lt;p&gt;Sometimes you want to break your components out of the constraints that they find themselves in. A common situation where this occurs is when you don‚Äôt have much control of the container that it exists in, such as a CMS main content area.&lt;/p&gt;
&lt;p&gt;This is even more the case with editing tools such as the &lt;a href=&quot;https://wordpress.org/gutenberg/&quot;&gt;WordPress Gutenberg editor&lt;/a&gt;, where in theory, you could pull in a component from a design system and utilise it in the main content of your web page. In these situations, it can be pretty darn handy to have a little utility that makes the element 100% of the viewport‚Äôs width &lt;em&gt;and&lt;/em&gt; still maintain its flow within its parent container.&lt;/p&gt;
&lt;p&gt;This is when I normally pull the &lt;code&gt;.full-bleed&lt;/code&gt; utility class out of my back pocket.&lt;/p&gt;
&lt;h2 id=&quot;the-.full-bleed-utility&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-.full-bleed-utility&quot;&gt;&lt;/a&gt; The &lt;code&gt;.full-bleed&lt;/code&gt; utility&lt;/h2&gt;
&lt;p&gt;It‚Äôs small, but hella mighty:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.full-bleed&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vw&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here it is in a context where it makes a fancy &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; and a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; element bleed out of their parent container.&lt;/p&gt;
&lt;lite-iframe  style=&quot;width: 100%; height: 300px&quot; scrolling=&quot;no&quot; title=&quot;Piccalilli CSS Utility ‚Äî Issue  #2 ‚Äî Full bleed utility&quot; src=&quot;//codepen.io/andybelldesign/embed/Nmxrwv/?height=300&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
&lt;/lite-iframe&gt;
&lt;p&gt;The &lt;code&gt;.full-bleed&lt;/code&gt; utility gives those elements prominence and &lt;em&gt;importantly&lt;/em&gt; keeps their semantic place in the page. Just how I like it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;üî• &lt;strong&gt;Pro tip&lt;/strong&gt;: When working with a utility like &lt;code&gt;.full-bleed&lt;/code&gt;, it‚Äôs a good idea to add an inner container that has a max-width and auto horizontal margin. For this, I normal create a shared &lt;code&gt;.wrapper&lt;/code&gt; component like this:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.wrapper&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token property&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having a container like &lt;code&gt;.wrapper&lt;/code&gt; helps to create consistent, centred content.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;how-the-.full-bleed-utility-works&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-the-.full-bleed-utility-works&quot;&gt;&lt;/a&gt; How the &lt;code&gt;.full-bleed&lt;/code&gt; utility works&lt;/h3&gt;
&lt;p&gt;We set the container to be &lt;code&gt;width: 100vw&lt;/code&gt;, which equates to the full viewport width. We couldn‚Äôt set it to &lt;code&gt;width: 100%&lt;/code&gt; because it would only fill the space of its parent element. The parent element‚Äôs width &lt;em&gt;is&lt;/em&gt; useful though, because by setting &lt;code&gt;margin-left: 50%&lt;/code&gt;, we are telling the component to align its &lt;strong&gt;left edge&lt;/strong&gt; to the center of its parent element, because &lt;code&gt;50%&lt;/code&gt; is half of the &lt;strong&gt;parent element‚Äôs&lt;/strong&gt; width.&lt;/p&gt;
&lt;p&gt;Finally, we use CSS transforms to &lt;code&gt;translateX(-50%)&lt;/code&gt;. Because the transform works off the element‚Äôs dimensions and not the parent‚Äôs dimensions, it‚Äôll pull the element back &lt;code&gt;50vw&lt;/code&gt;, because it‚Äôs &lt;code&gt;100vw&lt;/code&gt; wide, thus making it sit perfectly flush with the viewport‚Äôs edges.&lt;/p&gt;
&lt;h2 id=&quot;wrapping-up&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#wrapping-up&quot;&gt;&lt;/a&gt; Wrapping up&lt;/h2&gt;
&lt;p&gt;Hopefully this short and sweet trick will help you out on your projects. If it does, &lt;a href=&quot;https://twitter.com/andybelldesign&quot;&gt;drop me a tweet&lt;/a&gt;, because I‚Äôd love to see it!&lt;/p&gt;
</content>
        </entry>
</feed>